{"version":3,"sources":["main.js"],"names":["window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","GAME","fps","canvas","document","createElement","context","getContext","invaders","objects","canvasSize","width","innerWidth","height","innerHeight","images","concat","Ship","swarmUp","body","appendChild","resizeCanvas","handleEvents","gameLoop","t","update","render","preloadImages","firstObject","secondObject","position","posX","size","posY","beings","destroy","Finish","survivers","filter","checkCollisions","length","i","Being","clearRect","drawObject","image","object","drawImage","number","being","haveFriends","toModule","x","imgSrc","swarm","push","ImagesCounter","forEach","sourse","Image","querySelector","src","onload","classList","add","game","onresize","windowResize","Laser","velocity","y","Math","round","laser","Audio","keyCode","laserTime","onkeydown","e","pressedKey","playerAction","directionX","speedX","invasionItself","setInterval","sound","looped","audio","loop","audioOttoEvent","addEventListener","play","this","ceil","duration","result","removeChild","head","button","buttonText","createTextNode","style","color","text","helpers","location","reload","gameActive","startButton","startScreen"],"mappings":"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","file":"main.js","sourcesContent":["window.requestAnimationFrame = (() => {\r\n  return (\r\n    window.requestAnimationFrame       ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame    ||\r\n    window.oRequestAnimationFrame      ||\r\n    window.msRequestAnimationFrame     ||\r\n    function (callback, element) {\r\n        window.setTimeout(callback, 1000 / GAME.fps);\r\n    });\r\n})();\r\n\r\nclass GAME {\r\n  constructor() {\r\n    this.canvas = document.createElement('canvas');\r\n    this.context = this.canvas.getContext('2d');\r\n    this.fps = 60;\r\n    this.invaders = 30;\r\n    this.objects = [];\r\n\r\n    this.canvasSize = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    };\r\n\r\n    this.images = [\r\n      '../img/dude.png',\r\n      '../img/ship.png',\r\n      '../img/laser.png',\r\n      '../img/bg.jpg'\r\n    ];\r\n\r\n    this.objects = this.objects.concat(new Ship(this, this.canvasSize, this.images[1]));\r\n    this.swarmUp(this.images[0])\r\n    document.body.appendChild(this.canvas);\r\n    this.resizeCanvas();\r\n    this.handleEvents();\r\n\r\n    var gameLoop = () => {\r\n      const t = this;\r\n\r\n      setTimeout(() => {\r\n        t.update();\r\n        t.render(t.context, t.canvasSize);\r\n        window.requestAnimationFrame(gameLoop);\r\n      }, 1000 / t.fps);\r\n    }\r\n\r\n    this.preloadImages(gameLoop);\r\n  }\r\n\r\n  checkCollisions(firstObject, secondObject) {\r\n    return !(\r\n      firstObject === secondObject ||\r\n      firstObject.position.posX + firstObject.size.width / 2 < secondObject.position.posX - secondObject.size.width / 2 ||\r\n      firstObject.position.posY + firstObject.size.height / 2 < secondObject.position.posY - secondObject.size.height / 2 ||\r\n      firstObject.position.posX - firstObject.size.width / 2 > secondObject.position.posX + secondObject.size.width / 2 ||\r\n      firstObject.position.posY - firstObject.size.height / 2 > secondObject.position.posY + secondObject.size.height / 2\r\n    );\r\n  };\r\n\r\n  update() {\r\n\r\n    if (this.beings === 0) {\r\n      this.destroy()\r\n      new Finish('You win!');\r\n      return;\r\n    }\r\n\r\n    const survivers = (firstObject) => {\r\n      return (this.objects.filter(\r\n        (secondObject) => {\r\n          return (\r\n            this.checkCollisions(firstObject, secondObject)\r\n          );\r\n        }\r\n      ).length === 0);\r\n    };\r\n\r\n    this.objects = this.objects.filter(survivers);\r\n\r\n    let beings = 0;\r\n    for (let i = 0; i < this.objects.length; i++) {\r\n      this.objects[i].update();\r\n\r\n      if (this.objects[i] instanceof Being) {\r\n        beings += 1;\r\n      }\r\n\r\n      this.beings = beings;\r\n    }\r\n  }\r\n\r\n  render(context, canvasSize) {\r\n    context.clearRect(0, 0, canvasSize.width, canvasSize.height);\r\n    for (let i = 0; i < this.objects.length; i++) {\r\n      this.drawObject(\r\n        context,\r\n        this.objects[i],\r\n        this.objects[i].image\r\n      );\r\n    }\r\n  }\r\n\r\n  drawObject(context, object, image) {\r\n    context.drawImage(\r\n      image,\r\n      object.position.posX,\r\n      object.position.posY,\r\n      object.size.width,\r\n      object.size.height\r\n    );\r\n  }\r\n\r\n  toModule(number) {\r\n    if (number < 0) {\r\n      number = -number;\r\n    }\r\n\r\n    return number\r\n  }\r\n\r\n  lowerRow(being) {\r\n    return this.objects.filter((haveFriends) => {\r\n      return (\r\n        haveFriends instanceof Being &&\r\n        this.toModule(being.position.x - haveFriends.position.x) < haveFriends.size.width &&\r\n        haveFriends.position.posY > being.position.posY\r\n      );\r\n    }).length > 0;\r\n  }\r\n\r\n  swarmUp(imgSrc) {\r\n    this.swarm = [];\r\n    this.beings = 60;\r\n\r\n    for (let i = 0; i < this.beings; i++) {\r\n\r\n      const\r\n        posX = 10 + (i % 12) * 80,\r\n        posY = 10 + (i % 5) * 60;\r\n\r\n      this.swarm.push(\r\n        new Being(\r\n          this,\r\n          {\r\n            posX: posX,\r\n            posY: posY\r\n          }\r\n        )\r\n      );\r\n    }\r\n\r\n    this.objects = this.objects.concat(this.swarm);\r\n  }\r\n\r\n  preloadImages(callback) {\r\n    const\r\n      ImagesCounter = this.images.length - 1,\r\n      t = this;\r\n\r\n    this.images.forEach((sourse, i) => {\r\n      let\r\n        image = new Image(),\r\n        body = document.querySelector('body');\r\n\r\n      image.src = sourse;\r\n      image.onload = () => {\r\n        if (i === ImagesCounter) {\r\n          body.classList.add('space');\r\n          callback();\r\n        }\r\n      };\r\n    })\r\n  }\r\n\r\n  resizeCanvas() {\r\n    this.canvas.width = this.canvasSize.width - 15;\r\n    this.canvas.height = this.canvasSize.height - 15;\r\n  }\r\n\r\n  windowResize() {\r\n    this.canvasSize.width = window.innerWidth;\r\n    this.canvasSize.height = window.innerHeight;\r\n    this.resizeCanvas();\r\n  }\r\n\r\n  destroy() {\r\n    delete window.game\r\n  }\r\n\r\n  handleEvents() {\r\n    const t = this;\r\n\r\n    window.onresize = () => {\r\n      t.windowResize();\r\n    };\r\n  }\r\n};\r\n\r\nclass Laser {\r\n  constructor(position, velocity, imgSrc) {\r\n    this.image = document.createElement('img');\r\n    this.image.src = imgSrc;\r\n    this.size = {\r\n      width: 24,\r\n      height: 78\r\n    };\r\n    this.position = position;\r\n    this.velocity = velocity;\r\n  }\r\n\r\n  update() {\r\n    this.position.posX += this.velocity.x;\r\n    this.position.posY += this.velocity.y;\r\n  }\r\n}\r\n\r\nclass Ship {\r\n  constructor(game, canvasSize, imgSrc) {\r\n    this.game = game;\r\n    this.image = document.createElement('img');\r\n    this.image.src = imgSrc;\r\n    this.size = {\r\n      width: 73,\r\n      height: 52\r\n    };\r\n    this.position = {\r\n      posX: Math.round((canvasSize.width / 2) - (this.size.width / 2)),\r\n      posY: Math.round(canvasSize.height - (this.size.height + 10))\r\n    };\r\n\r\n    this.handleEvents();\r\n  }\r\n\r\n  laserTime() {\r\n    const laser = new Laser(\r\n      {\r\n        posX: this.position.posX,\r\n        posY: this.position.posY - this.size.width - 10\r\n      }, {\r\n        x: 0,\r\n        y: -20\r\n      },\r\n      this.game.images[2]\r\n    );\r\n\r\n    this.game.objects.push(laser);\r\n    new Audio('../sound/spas12.mp3', false);\r\n  }\r\n\r\n  playerAction(keyCode) {\r\n    if (keyCode === 37) {\r\n      if (this.position.posX < 0) {\r\n        return\r\n      }\r\n      this.position.posX -= 10;\r\n    } else if (keyCode === 39) {\r\n      if (this.position.posX >= (this.game.canvasSize.width - this.size.width - 20)) {\r\n        return\r\n      }\r\n      this.position.posX += 10;\r\n    } else if (keyCode === 32) {\r\n      this.laserTime();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    // tradition vs extra condition im game update method, hmmm ...\r\n  }\r\n\r\n  handleEvents() {\r\n    const t = this;\r\n\r\n    window.onkeydown = (e) => {\r\n      const pressedKey = e.keyCode;\r\n\r\n      t.playerAction(pressedKey);\r\n    }\r\n  }\r\n}\r\n\r\nclass Being {\r\n  constructor(game, position) {\r\n    this.game = game;\r\n    this.image = document.createElement('img');\r\n    this.image.src = this.game.images[0];\r\n    this.position = position;\r\n    this.directionX = 0;\r\n    this.speedX = 2;\r\n    this.size = {\r\n      width: 57,\r\n      height: 41\r\n    };\r\n\r\n    this.invasionItself(this);\r\n  }\r\n\r\n  invasionItself(being) {\r\n    setInterval(() => {\r\n      this.position = {\r\n        posX: this.position.posX,\r\n        posY: this.position.posY + 10\r\n      }\r\n\r\n      if (this.position.posY + this.size.height + 100 > this.game.canvasSize.height) {\r\n        new Finish('You lose!');\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  update() {\r\n    if (this.directionX < 0 ||\r\n        this.directionX > (this.game.canvasSize.width - ((this.size.width + 24) * 12))) {\r\n        this.speedX = -this.speedX;\r\n    }\r\n\r\n    this.position.posX += this.speedX;\r\n    this.directionX += this.speedX;\r\n  }\r\n}\r\n\r\nclass Audio {\r\n  constructor(sound, looped) {\r\n    this.audio = document.createElement(\"AUDIO\");\r\n    this.audio.src = sound;\r\n    this.audio.loop = looped;\r\n\r\n    let audioOttoEvent = this.audio;\r\n    this.audio.addEventListener('canplaythrough', function() {\r\n      audioOttoEvent.play();\r\n    }, false);\r\n  }\r\n\r\n  stopPlaying() {\r\n    if (!this.audio.loop) {\r\n      setTimeout(() => {\r\n        delete window.this;\r\n      }, Math.ceil(this.audio.duration));\r\n    }\r\n  }\r\n}\r\n\r\nclass Finish {\r\n  constructor(result) {\r\n    this.canvas = document.querySelector('canvas');\r\n\r\n    //one day, a wonderful flag will be triggering here\r\n    if (this.canvas) {\r\n      document.body.removeChild(this.canvas);\r\n    } else {\r\n      return\r\n    }\r\n\r\n    this.head = document.createElement('h1');\r\n    this.button = document.createElement('button');\r\n    this.buttonText = document.createTextNode('Restart!');\r\n    this.button.appendChild(this.buttonText)\r\n    this.head.style.color = 'red';\r\n    this.text = document.createTextNode(result);\r\n    this.head.appendChild(this.text);\r\n    document.body.appendChild(this.head);\r\n    document.body.appendChild(this.button);\r\n\r\n    this.helpers();\r\n  }\r\n\r\n  helpers() {\r\n    document.querySelector('button').addEventListener('mouseup', function() {\r\n       window.location.reload();\r\n    }, false);\r\n  }\r\n}\r\n\r\nlet gameActive = () => {\r\n  new Audio('../sound/theme.mp3', true);\r\n  new GAME();\r\n};\r\n\r\nconst startButton = document.querySelector('.button'),\r\n      startScreen = document.querySelector('.start-screen');\r\n\r\nstartButton.addEventListener('mouseup', function() {\r\n  document.body.removeChild(startScreen)\r\n  gameActive();\r\n}, false);\r\n"]}